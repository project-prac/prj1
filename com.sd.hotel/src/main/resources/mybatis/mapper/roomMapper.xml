<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.sd.hotel.mapper.RoomMapper">
  

  
  <!-- 중분류까지의list확인 -->
  <select id="getRoomList"
          resultType="RoomDto">
   SELECT ROOM_NO, ROOM_NAME, DEPTH, PARENT_NAME, INFO, PRICE, GUEST_COUNT,TOTAL_ROOM 
     FROM ROOM
    ORDER BY ROOM_NO
  </select>
  

  <!-- detailRoom List 가져오기 -->
  
  <select id="getRoomDetailList"
          resultType="RoomDetailDto">
    SELECT ROOM_DETAIL_NO, ROOM_NO, ROOM_NAME
      FROM ROOM_DETAIL
      
  </select>

  
  <select id="getRoomImgList"
          resultType="RoomImgDto">
  SELECT ROOM_NO, ROOM_IMG_NO, ROOM_IMG_NAME, UPLOAD_PATH, FILESYSTEM_NAME
    FROM ROOM_IMG
  
  </select>
  
  
  
  <!-- RoomNo로 room정보 가져오기 -->
  <select id="getRoombyRoomNo"
          resultType="RoomDto">
    SELECT ROOM_NO, ROOM_NAME, INFO, PRICE, GUEST_COUNT, TOTAL_ROOM
      FROM ROOM
     WHERE ROOM_NO = #{roomNo}
  </select>
  
  
  
  <!-- RoomNo로 imglist가져오기 -->
  <select id="getRoomImgListByNo"
          resultType="RoomImgDto">
  SELECT ROOM_NO, ROOM_IMG_NO, ROOM_IMG_NAME, UPLOAD_PATH, FILESYSTEM_NAME
    FROM ROOM_IMG
   WHERE ROOM_NO = #{roomNo}
  </select>
  
  <!-- 객실roomNo 추가 -->
  <insert id="roomNoRegister"
          parameterType="roomDto">
    INSERT INTO ROOM(
                  ROOM_NO
                , ROOM_NAME
                , DEPTH
                , PARENT_NAME  
                ) VALUES(
                  #{roomNo}
                , #{roomName}
                , #{depth}
                , #{parentName}
                )
  </insert>
  
  <!-- 객실roomType 추가 -->
  <insert id="roomTypeRegister"
          parameterType="roomDto">
      <selectKey order="BEFORE" keyProperty="roomNo" resultType="int" >
        SELECT NVL(MAX(ROOM_NO), #{parentName}) + 1
        FROM ROOM
        WHERE PARENT_NAME = #{parentName}
      </selectKey>
          
      INSERT INTO ROOM(
                 ROOM_NO
                , ROOM_NAME
                , DEPTH
                , PARENT_NAME
                , INFO
                , PRICE
                , GUEST_COUNT
                , TOTAL_ROOM  
                , AVAILABLE_ROOM
                ) VALUES(
                 #{roomNo}
                , #{roomName}
                , #{depth}
                , #{parentName}
                , #{info}
                , #{price}
                , #{guestCount}
                , #{totalRoom}
                , #{availableRoom}
                )
  </insert>
  
  <insert id="roomDetailRegister"
          parameterType="roomDetailDto">
    <selectKey order="BEFORE" keyProperty="roomDetailNo" resultType="int" >
      SELECT 
            CASE 
                WHEN MAX(RD.ROOM_DETAIL_NO) IS NULL THEN #{roomNo} * 100 + 1
                ELSE MAX(RD.ROOM_DETAIL_NO) + 1
            END
        FROM ROOM R 
        LEFT JOIN ROOM_DETAIL RD ON R.ROOM_NO = RD.ROOM_NO
        WHERE R.ROOM_NO = #{roomNo}              
    </selectKey>
    INSERT INTO ROOM_DETAIL(
                 ROOM_NO
                , ROOM_NAME
                , ROOM_DETAIL_NO
                
                ) VALUES(
                 #{roomNo}
                , #{roomName}
                ,#{roomDetailNo}
               
                )
  
  
  </insert>
  
  
  <insert id="roomImgRegister"
          parameterType="RoomImgDto">
    INSERT INTO ROOM_IMG(
                  ROOM_NO
                , ROOM_IMG_NAME
                , UPLOAD_PATH
                , ROOM_IMG_NO
                , FILESYSTEM_NAME
                ) VALUES (
                  #{roomNo}
                , #{roomImgName}
                , #{uploadPath}
                , ROOM_IMG_SEQ.NEXTVAL
                , #{filesystemName}
                )
                
  </insert>
  
  
  <!-- 수정 -->
  <!-- 객실 수정 -->
  <update id="modifyRoomInfo"
          parameterType="RoomDto">
    UPDATE ROOM
       SET ROOM_NAME = #{roomName}
         , INFO = #{info}
         , PRICE = #{price}
         , GUEST_COUNT = #{guestCount}
     WHERE ROOM_NO = #{roomNo}
  </update>



  <!-- 객실 detail 수 수정 -->
  <update id="modifyRoomDetail">
    UPDATE ROOM_DETAIL
       SET ROOM_NAME = #{roomName}
     WHERE ROOM_NO = #{roomNo}
    
  </update>
  
  <delete id="delteRoomDetail">

      DELETE FROM ROOM_DETAIL
      WHERE ROOM_DETAIL_NO IN (
                                SELECT ROOM_DETAIL_NO FROM (
                                                            SELECT ROOM_DETAIL_NO
                                                              FROM ROOM_DETAIL
                                                             WHERE ROOM_NO = #{roomNo}
                                                             ORDER BY ROOM_DETAIL_NO DESC
                                                            )
                                  WHERE ROWNUM =1
                                )                               
                                
                                							
  </delete>
  
  <!-- roomImg지우기 -->
  <delete id="deleteRoomImg">
    DELETE FROM ROOM_IMG
     WHERE ROOM_IMG_NO = #{roomImgNo}
  </delete>
  
  
  
  <!-- 객실예약  관련  -->
  
  
  <!-- 예약테이블 추가 -->
  <insert id="roomReserve"
          parameterType = "ReservationDto">
   <selectKey order="BEFORE" keyProperty="reservationNo" resultType="int">
      SELECT RES_SEQ.NEXTVAL
        FROM DUAL
    </selectKey>

      INSERT INTO RESERVATION(
                    RESERVATION_NO
                  , MEMBER_NO
                  , ROOM_NO
                  , RESERVED_DATE
                  , CHECK_IN_DATE
                  , CHECK_OUT_DATE
                  , STATUS
                  , GUEST_COUNT
                  , RES_NAME
                  , RES_PHONE
                  , RES_MAIL
                  , RES_NOTE
                  )VALUES(
                    #{reservationNo}
                  , #{memberNo}
                  , #{roomNo}
                  , CURRENT_DATE
                  , #{checkInDate}
                  , #{checkOutDate}
                  , #{status}
                  , #{guestCount}
                  , #{resName}
                  , #{resPhone}
                  , #{resMail}
                  , #{resNote}
                    )
      
  </insert>
  
  <!-- 객실테이블에 객실수 변경 추가 -->
  <update id="roomUpdate">
     UPDATE ROOM
        SET RESERVED_ROOM = RESERVED_ROOM + 1,
            AVAILABLE_ROOM = AVAILABLE_ROOM -1
      WHERE ROOM_NO = #{roomNo}
  
  </update>
  
  
  <!-- 회원의 객실 예약 목록 가져오기 -->
  <select id="getReservedRoom"
          resultType="ReservationDto">
    SELECT RESERVATION_NO 
         , ROOM_NO
         , MEMBER_NO 
         , RESERVED_DATE
         , CHECK_IN_DATE
         , CHECK_OUT_DATE
         , STATUS
         , GUEST_COUNT
         , RES_NAME
         , RES_PHONE
         , RES_MAIL
         , RES_NOTE
      FROM RESERVATION
     WHERE MEMBER_NO = #{memberNo} 
       AND CHECK_IN_DATE >= TO_DATE(TO_CHAR(CURRENT_DATE, 'YYYY-MM-DD'), 'YYYY-MM-DD')
       AND STATUS IN (#{reserved}, #{completed}) 
     ORDER BY CHECK_IN_DATE 
  </select>
  
  
  <resultMap type="ReservationDto" id="RoomDetailMap">
    <id property="reservationNo"    column="RESERVATION_NO"/>
    <result property="memberNo"     column="MEMBER_NO"/>
    <result property="roomNo"       column="ROOM_NO"/>
    <result property="guestCount"   column="GUEST_COUNT"/>
    <result property="reservedDate" column="RESERVED_DATE"/>
    <result property="checkInDate"  column="CHECK_IN_DATE"/>
    <result property="checkOutDate" column="CHECK_OUT_DATE"/>
    <result property="status"       column="STATUS"/>
    <result property="resName"      column="RES_NAME"/>
    <result property="resPhone"     column="RES_PHONE"/>
    <result property="resMail"      column="RES_MAIL"/>
    <result property="resNote"      column="RES_NOTE"/>
    <collection property="room" javaType="RoomDto">
      <id property="roomNo" column="ROOM_NO"></id>
      <result property="roomName" column="ROOM_NAME"/>
    </collection>
    
  </resultMap>
  
  <!-- 회원의 객실 예약 상세 가져오기 -->
  <select id="getReservedRoomDetail"
          resultMap="RoomDetailMap"
         >
    SELECT RES.RESERVATION_NO , RES.MEMBER_NO, RES.ROOM_NO
         , RES.GUEST_COUNT ,RES.RESERVED_DATE , RES.CHECK_IN_DATE
         , RES.CHECK_OUT_DATE, RES.STATUS, RES.RES_NAME
         , RES.RES_PHONE, RES.RES_MAIL, RES.RES_NOTE
         , R.ROOM_NAME
      FROM RESERVATION RES
      JOIN ROOM R
        ON RES.ROOM_NO = R.ROOM_NO
     WHERE RESERVATION_NO = #{reservationNo}
  </select>



  


  <!-- 예약 삭제  -->
  
  <!-- 예약 삭제 : 예약테이블 항목삭제 -->
  <update id="cancelReservation">
    UPDATE RESERVATION
       SET STATUS = #{status}
     WHERE RESERVATION_NO = #{reservationNo}
  </update>
  
  <!-- 예약 삭제 : 객실테이블 객실 수 수정 -->
   <update id="roomRemoveUpdate">
    UPDATE ROOM
       SET RESERVED_ROOM = RESERVED_ROOM - 1,
           AVAILABLE_ROOM = AVAILABLE_ROOM + 1
     WHERE ROOM_NO = #{roomNo}
   </update>
    
  
</mapper>